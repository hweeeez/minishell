hui-lim@c2r5s2:~/Documents/minishell$ >hello
hui-lim@c2r5s2:~/Documents/minishell$ ls
a.out  hello  main.c  minishell.h  README.md
hui-lim@c2r5s2:~/Documents/minishell$ rm hello
hui-lim@c2r5s2:~/Documents/minishell$ >hello >hello >hello echo >hello a >hello b >hello c >hello d
hui-lim@c2r5s2:~/Documents/minishell$ cat hello
a b c d
hui-lim@c2r5s2:~/Documents/minishell$ >hello2 echo a


do not need to start with commands,
redirect will redirect the latest file from left to right


typedef struct s_pipe t_pipe;
typedef struct s_command t_command;
typedef struct s_redir t_redir;

typedef struct s_redir
{
	char*		value;
	int			type;
}				t_redir;

typedef struct s_command
{
	char**		args;
	t_redir*	redirs;
}				t_command;

typedef struct s_node
{
	int			type;
	t_pipe*		pipe;
	t_command*	commands;
	t_redir*	redir;
}				t_node;

typedef struct s_pipe
{
	struct s_node*		left;
	struct s_node*		right;
}				t_pipe;

typedef enum e_node_type
{
    NODE_PIPE,
    NODE_COMMAND,
    NODE_REDIR,
    NODE_ARGS,
} t_node_type;

typedef struct s_tree
{
	t_node*		next;
	t_node*		lastpipe;
}				t_tree;

node->left: 0xad7740
node->prev->right: 0xad7700
node->prev: 0xad7640
node->prev->right (after assignment): (nil)
node->prev: 0xad7700

/*void    traverse_tree(t_node** root, char** envp)
{
    if ((*root)->left)
    {
        printf("Executing left\n");
        if ((*root)->left->redirections != NULL)
            printf("Redirection: %s\n", (*root)->left->redirections->file);
        if ((*root)->left->args){
            char **c = (*root)->left->args;
            if (access(c[1], F_OK) != -1)
            	printf("File exists");
            
        }
    }
    if ((*root)->right)
    {
        if ((*root)->right->type == 0)
        {
            printf("Executing right: PIPE\n ");
            (*root) = (*root)->right;
            traverse_tree(root, envp);
        }
        else
        {
            printf("Executing right\n ");
            if ((*root)->right->redirections != NULL)
                printf("Redirection: %s\n", (*root)->right->redirections->file);
            printf("args: ");
            char **c = (*root)->right->args;
            while (*c)
            {
                printf("%s ", (*c));
                (c)++;
            }
            printf("\n");
        }
    }
}*/
