hui-lim@c2r5s2:~/Documents/minishell$ >hello
hui-lim@c2r5s2:~/Documents/minishell$ ls
a.out  hello  main.c  minishell.h  README.md
hui-lim@c2r5s2:~/Documents/minishell$ rm hello
hui-lim@c2r5s2:~/Documents/minishell$ >hello >hello >hello echo >hello a >hello b >hello c >hello d
hui-lim@c2r5s2:~/Documents/minishell$ cat hello
a b c d
hui-lim@c2r5s2:~/Documents/minishell$ >hello2 echo a


do not need to start with commands,
redirect will redirect the latest file from left to right


CHILDS inherit everything from the parent
childs DO NOT SHARE THE SAME MEMORY
running sleep inside a child, then pressing ctrlc (man waitpid W_EXITSIGNAL) must send a signal to the parent to terminate

/*void    traverse_tree(t_node** root, char** envp)
{
    if ((*root)->left)
    {
        printf("Executing left\n");
        if ((*root)->left->redirections != NULL)
            printf("Redirection: %s\n", (*root)->left->redirections->file);
        if ((*root)->left->args){
            char **c = (*root)->left->args;
            if (access(c[1], F_OK) != -1)
            	printf("File exists");
            
        }
    }
    if ((*root)->right)
    {
        if ((*root)->right->type == 0)
        {
            printf("Executing right: PIPE\n ");
            (*root) = (*root)->right;
            traverse_tree(root, envp);
        }
        else
        {
            printf("Executing right\n ");
            if ((*root)->right->redirections != NULL)
                printf("Redirection: %s\n", (*root)->right->redirections->file);
            printf("args: ");
            char **c = (*root)->right->args;
            while (*c)
            {
                printf("%s ", (*c));
                (c)++;
            }
            printf("\n");
        }
    }
}*/
